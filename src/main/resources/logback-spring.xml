<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <logger name="org.springframework.web" level="INFO"/>

    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--输出到文件-->
    <appender name="rollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/bdc_client_provider.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>logs/bdc_client_provider_%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>100GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <immediateFlush>true</immediateFlush><!--日志数据过大时设置为false-->
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
    </appender>

    <!-- ELK appender -->
    <appender name="elkAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>/opt/elk_logs/bdc_client_provider_elk_${HOSTNAME}_%d{yyyy-MM-dd}.log</FileNamePattern>
            <maxHistory>15</maxHistory>
            <totalSizeCap>50GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <pattern>
                    <pattern>
                        {"service_id": "bdc-eureka-server","log_time": "%date{\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"}", "thread": "%thread", "level": "%level",
                        "logger": "%logger", "msg": "%message", "stack_trace": "%exception"}
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <!-- 异步输出 -->
    <appender name="asyncAppender" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>1024</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="elkAppender"/>
    </appender>

    <springProfile name="local">
        <root level="INFO">
            <appender-ref ref="console"/>
            <appender-ref ref="rollingFile"/>
        </root>
    </springProfile>

    <springProfile name="develop">
        <root level="DEBUG">
            <appender-ref ref="rollingFile"/>
            <appender-ref ref="elkAppender"/>
        </root>
    </springProfile>

    <springProfile name="test">
        <root level="DEBUG">
            <appender-ref ref="rollingFile"/>
            <appender-ref ref="elkAppender"/>
        </root>
    </springProfile>

    <springProfile name="staging">
        <root level="INFO">
            <appender-ref ref="rollingFile"/>
            <appender-ref ref="elkAppender"/>
        </root>
    </springProfile>

    <springProfile name="production">
        <root level="INFO">
            <appender-ref ref="rollingFile"/>
            <appender-ref ref="elkAppender"/>
        </root>
    </springProfile>
</configuration>